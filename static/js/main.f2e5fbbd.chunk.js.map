{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","SORT_FILED_DEFAULT","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","good1","good2","SORT_FILED_NAME","localeCompare","SORT_FILED_LENGTH","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,sBAAAA,E,uBAAAA,E,4BAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,oBAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA/BR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,UAAWE,EACb,EADaA,WAEPI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAASe,gBACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,kBACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXX,GACFI,EAAcQ,UAGTR,EAOHS,CACAnB,EACA,CAAEI,YAAWE,eAQjB,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYlB,IAAcL,EAASe,kBAGvCS,QAAS,kBAAMlB,EAAaN,EAASe,kBATvC,iCAcA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYlB,IAAcL,EAASiB,oBAGvCO,QAAS,kBAAMlB,EAAaN,EAASiB,oBATvC,4BAcA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAahB,IAGjBiB,QAAS,kBAAMhB,GAAeD,IAThC,sBAcEF,GAAaE,IACb,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAtDI,WACZhB,GAAc,GACdF,EAAaN,EAASI,qBAiDhB,sBAUJ,6BACGK,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC3HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f2e5fbbd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  SORT_FILED_DEFAULT = '',\n  SORT_FILED_NAME = 'name',\n  SORT_FILED_LENGTH = 'length',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortField, isReversed }: { sortField: SortType, isReversed: boolean },\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.SORT_FILED_NAME:\n          return good1.localeCompare(good2);\n\n        case SortType.SORT_FILED_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.SORT_FILED_DEFAULT);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods\n    = getPreparedGoods(\n      goodsFromServer,\n      { sortField, isReversed },\n    );\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortField(SortType.SORT_FILED_DEFAULT);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            {\n              'is-light': sortField !== SortType.SORT_FILED_NAME,\n            },\n          )}\n          onClick={() => setSortField(SortType.SORT_FILED_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            {\n              'is-light': sortField !== SortType.SORT_FILED_LENGTH,\n            },\n          )}\n          onClick={() => setSortField(SortType.SORT_FILED_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}